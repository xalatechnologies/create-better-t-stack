{{#if (eq ui "xala")}}
import type { Config } from "tailwindcss";
import { xalaDesignTokens } from "@xala-technologies/design-tokens";

const config: Config = {
  content: [
    "./src/pages/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/components/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/app/**/*.{js,ts,jsx,tsx,mdx}",
    "./node_modules/@xala-technologies/ui-system/**/*.{js,ts,jsx,tsx}"
  ],
  darkMode: ["class"],
  theme: {
    extend: {
      // Xala Design Tokens Integration
      colors: xalaDesignTokens.colors,
      spacing: xalaDesignTokens.spacing,
      fontSize: xalaDesignTokens.typography.fontSize,
      fontFamily: xalaDesignTokens.typography.fontFamily,
      lineHeight: xalaDesignTokens.typography.lineHeight,
      letterSpacing: xalaDesignTokens.typography.letterSpacing,
      borderRadius: xalaDesignTokens.borderRadius,
      boxShadow: xalaDesignTokens.shadows,
      
      // Enhanced 8pt Grid System
      gridTemplateColumns: {
        'xala-1': 'repeat(1, minmax(0, 1fr))',
        'xala-2': 'repeat(2, minmax(0, 1fr))',
        'xala-3': 'repeat(3, minmax(0, 1fr))',
        'xala-4': 'repeat(4, minmax(0, 1fr))',
        'xala-5': 'repeat(5, minmax(0, 1fr))',
        'xala-6': 'repeat(6, minmax(0, 1fr))',
        'xala-12': 'repeat(12, minmax(0, 1fr))',
      },
      
      // Norwegian Breakpoints
      screens: {
        'mobile': '320px',
        'mobile-lg': '425px',
        'tablet': '768px',
        'laptop': '1024px',
        'desktop': '1440px',
        'desktop-lg': '2560px',
      },
      
      // WCAG AAA Color Contrast Ratios
      contrast: {
        'wcag-aa': '4.5',
        'wcag-aaa': '7.0',
      },
      
      // Accessibility Utilities
      focusRing: {
        'xala': '2px solid var(--color-primary-500)',
      },
      
      // Animation with Reduced Motion Support
      animation: {
        'fade-in': 'fadeIn 0.3s ease-in-out',
        'slide-up': 'slideUp 0.3s ease-out',
        'scale-in': 'scaleIn 0.2s ease-out',
      },
      
      keyframes: {
        fadeIn: {
          '0%': { opacity: '0' },
          '100%': { opacity: '1' },
        },
        slideUp: {
          '0%': { transform: 'translateY(10px)', opacity: '0' },
          '100%': { transform: 'translateY(0)', opacity: '1' },
        },
        scaleIn: {
          '0%': { transform: 'scale(0.95)', opacity: '0' },
          '100%': { transform: 'scale(1)', opacity: '1' },
        },
      },
    },
  },
  plugins: [
    require("@tailwindcss/typography"),
    require("@tailwindcss/forms"),
    require("@tailwindcss/aspect-ratio"),
    require("@tailwindcss/container-queries"),
  ],
  // Accessibility and Compliance
  corePlugins: {
    preflight: true,
  },
  // Norwegian Localization Support
  future: {
    hoverOnlyWhenSupported: true,
  },
};

export default config;
{{else}}
import type { Config } from "tailwindcss";

const config: Config = {
  content: [
    "./src/pages/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/components/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/app/**/*.{js,ts,jsx,tsx,mdx}",
  ],
  theme: {
    extend: {
      colors: {
        background: "hsl(var(--background))",
        foreground: "hsl(var(--foreground))",
        card: {
          DEFAULT: "hsl(var(--card))",
          foreground: "hsl(var(--card-foreground))",
        },
        popover: {
          DEFAULT: "hsl(var(--popover))",
          foreground: "hsl(var(--popover-foreground))",
        },
        primary: {
          DEFAULT: "hsl(var(--primary))",
          foreground: "hsl(var(--primary-foreground))",
        },
        secondary: {
          DEFAULT: "hsl(var(--secondary))",
          foreground: "hsl(var(--secondary-foreground))",
        },
        muted: {
          DEFAULT: "hsl(var(--muted))",
          foreground: "hsl(var(--muted-foreground))",
        },
        accent: {
          DEFAULT: "hsl(var(--accent))",
          foreground: "hsl(var(--accent-foreground))",
        },
        destructive: {
          DEFAULT: "hsl(var(--destructive))",
          foreground: "hsl(var(--destructive-foreground))",
        },
        border: "hsl(var(--border))",
        input: "hsl(var(--input))",
        ring: "hsl(var(--ring))",
        chart: {
          "1": "hsl(var(--chart-1))",
          "2": "hsl(var(--chart-2))",
          "3": "hsl(var(--chart-3))",
          "4": "hsl(var(--chart-4))",
          "5": "hsl(var(--chart-5))",
        },
      },
      borderRadius: {
        lg: "var(--radius)",
        md: "calc(var(--radius) - 2px)",
        sm: "calc(var(--radius) - 4px)",
      },
    },
  },
  plugins: [require("tailwindcss-animate")],
};

export default config;
{{/if}}
