import React from 'react';
{{#if typescript}}
import type { ReactNode } from 'react';
{{/if}}

{{#if typescript}}
interface RTLLayoutProps {
  children: ReactNode;
  language?: string;
  className?: string;
}
{{/if}}

export const RTLLayout{{#if typescript}}: React.FC<RTLLayoutProps>{{/if}} = ({
  children,
  language = 'ar',
  className = '',
}) => {
  const isRTL = ['ar', 'he', 'fa', 'ur'].includes(language);
  
  return (
    <div
      dir={isRTL ? 'rtl' : 'ltr'}
      lang={language}
      className={`min-h-screen ${className}`}
      style={{
        fontFamily: isRTL 
          ? "'Noto Sans Arabic', 'Amiri', 'Cairo', 'Tajawal', -apple-system, sans-serif"
          : "-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif"
      }}
    >
      {/* RTL-specific CSS */}
      {isRTL && (
        <style jsx global>{`
          /* RTL Layout Support */
          [dir="rtl"] {
            direction: rtl;
            text-align: right;
          }

          /* Flexbox RTL adjustments */
          [dir="rtl"] .flex-row {
            flex-direction: row-reverse;
          }

          /* Spacing RTL adjustments */
          [dir="rtl"] .space-x-4 > :not([hidden]) ~ :not([hidden]) {
            margin-right: 1rem;
            margin-left: 0;
          }

          /* Grid RTL adjustments */
          [dir="rtl"] .text-left {
            text-align: right;
          }

          [dir="rtl"] .text-right {
            text-align: left;
          }

          /* Form inputs */
          [dir="rtl"] input[type="email"],
          [dir="rtl"] input[type="tel"],
          [dir="rtl"] input[type="url"],
          [dir="rtl"] input[type="number"] {
            direction: ltr;
            text-align: right;
          }

          /* Icons */
          [dir="rtl"] .rotate-for-rtl {
            transform: scaleX(-1);
          }

          /* Animations */
          @keyframes slideInFromRight {
            from { transform: translateX(100%); }
            to { transform: translateX(0); }
          }

          @keyframes slideInFromLeft {
            from { transform: translateX(-100%); }
            to { transform: translateX(0); }
          }

          [dir="rtl"] .slide-in-left {
            animation: slideInFromRight 0.3s ease-in-out;
          }

          [dir="rtl"] .slide-in-right {
            animation: slideInFromLeft 0.3s ease-in-out;
          }
        `}</style>
      )}
      
      {children}
    </div>
  );
};