/**
 * React Native Configuration - Xala UI System Compliant
 * Generated with Xaheen CLI - Mobile Platform (React Native) Configuration
 * 
 * MANDATORY COMPLIANCE RULES:
 * ❌ NO raw HTML elements (div, span, p, h1-h6, button, input, etc.)
 * ✅ ONLY semantic components from @xala-technologies/ui-system
 * ❌ NO hardcoded styling (no style={{}}, no arbitrary Tailwind values)
 * ✅ MANDATORY design token usage for all colors, spacing, typography
 * ✅ Enhanced 8pt Grid System - all spacing in 8px increments
 * ✅ WCAG 2.2 AAA compliance for accessibility
 * ❌ NO hardcoded user-facing text - ALL text must use t() function
 * ✅ MANDATORY localization: English, Norwegian Bokmål, French, Arabic
 * ✅ Explicit TypeScript return types (no 'any' types)
 * ✅ SOLID principles and component composition
 * ✅ Maximum 200 lines per file, 20 lines per function
 */

module.exports = {
  // Project configuration
  project: {
    ios: {
      project: './ios/{{projectName}}.xcworkspace',
      sourceDir: './ios',
      unstable_reactLegacyComponentNames: ['CxxBridge', 'RCTScrollView'],
    },
    android: {
      sourceDir: './android',
      appName: '{{projectName}}',
      packageName: '{{packageName}}',
      unstable_reactLegacyComponentNames: ['CxxBridge', 'RCTScrollView'],
    },
  },

  // Dependencies configuration
  dependencies: {
    // React Native Vector Icons
    'react-native-vector-icons': {
      platforms: {
        ios: {
          project: './node_modules/react-native-vector-icons/RNVectorIcons.xcodeproj',
          sharedLibraries: ['libRNVectorIcons'],
        },
        android: {
          sourceDir: '../node_modules/react-native-vector-icons/android',
          packageImportPath: 'import io.github.oblador.vectoricons.VectorIconsPackage;',
        },
      },
    },

    // React Native Reanimated
    'react-native-reanimated': {
      platforms: {
        android: {
          sourceDir: '../node_modules/react-native-reanimated/android',
          packageImportPath: 'import com.swmansion.reanimated.ReanimatedPackage;',
        },
        ios: {
          project: './node_modules/react-native-reanimated/RNReanimated.xcodeproj',
        },
      },
    },

    // React Native Gesture Handler
    'react-native-gesture-handler': {
      platforms: {
        android: {
          sourceDir: '../node_modules/react-native-gesture-handler/android',
          packageImportPath: 'import com.swmansion.gesturehandler.react.RNGestureHandlerPackage;',
        },
        ios: {
          project: './node_modules/react-native-gesture-handler/RNGestureHandler.xcodeproj',
        },
      },
    },

    // React Native Safe Area Context
    'react-native-safe-area-context': {
      platforms: {
        android: {
          sourceDir: '../node_modules/react-native-safe-area-context/android',
          packageImportPath: 'import org.th317erd.react.safe.area.context.SafeAreaContextPackage;',
        },
        ios: {
          project: './node_modules/react-native-safe-area-context/RNSafeAreaContext.xcodeproj',
        },
      },
    },

    // React Native Screens
    'react-native-screens': {
      platforms: {
        android: {
          sourceDir: '../node_modules/react-native-screens/android',
          packageImportPath: 'import com.swmansion.rnscreens.RNScreensPackage;',
        },
        ios: {
          project: './node_modules/react-native-screens/RNScreens.xcodeproj',
        },
      },
    },

    // Norwegian compliance: BankID integration
    'react-native-bankid': {
      platforms: {
        ios: {
          project: './node_modules/react-native-bankid/ios/RNBankID.xcodeproj',
          podspecPath: './node_modules/react-native-bankid/react-native-bankid.podspec',
        },
        android: {
          sourceDir: '../node_modules/react-native-bankid/android',
          packageImportPath: 'import no.bankid.react.RNBankIDPackage;',
        },
      },
    },

    // Norwegian compliance: Vipps integration
    'react-native-vipps': {
      platforms: {
        ios: {
          project: './node_modules/react-native-vipps/ios/RNVipps.xcodeproj',
          podspecPath: './node_modules/react-native-vipps/react-native-vipps.podspec',
        },
        android: {
          sourceDir: '../node_modules/react-native-vipps/android',
          packageImportPath: 'import no.vipps.react.RNVippsPackage;',
        },
      },
    },

    // Accessibility: Screen reader support
    'react-native-accessibility-info': {
      platforms: {
        ios: {
          project: './node_modules/react-native-accessibility-info/ios/RNAccessibilityInfo.xcodeproj',
        },
        android: {
          sourceDir: '../node_modules/react-native-accessibility-info/android',
          packageImportPath: 'import com.accessibilityinfo.react.RNAccessibilityInfoPackage;',
        },
      },
    },

    // Localization support
    'react-native-localize': {
      platforms: {
        ios: {
          project: './node_modules/react-native-localize/ios/RNLocalize.xcodeproj',
        },
        android: {
          sourceDir: '../node_modules/react-native-localize/android',
          packageImportPath: 'import com.zoontek.rnlocalize.RNLocalizePackage;',
        },
      },
    },

    // Async Storage
    '@react-native-async-storage/async-storage': {
      platforms: {
        android: {
          sourceDir: '../node_modules/@react-native-async-storage/async-storage/android',
          packageImportPath: 'import com.reactnativecommunity.asyncstorage.AsyncStoragePackage;',
        },
        ios: {
          project: './node_modules/@react-native-async-storage/async-storage/RNCAsyncStorage.xcodeproj',
        },
      },
    },

    // NetInfo for network status
    '@react-native-community/netinfo': {
      platforms: {
        android: {
          sourceDir: '../node_modules/@react-native-community/netinfo/android',
          packageImportPath: 'import com.reactnativecommunity.netinfo.NetInfoPackage;',
        },
        ios: {
          project: './node_modules/@react-native-community/netinfo/RNCNetInfo.xcodeproj',
        },
      },
    },
  },

  // Assets configuration
  assets: [
    './src/assets/fonts/',
    './src/assets/images/',
    './src/assets/icons/',
  ],

  // Platform-specific configurations
  platforms: {
    ios: {
      // iOS specific configuration
      sourceDir: './ios',
      project: {
        ios: {
          sourceDir: './ios',
          xcodeProject: {
            name: '{{projectName}}.xcodeproj',
            isWorkspace: false,
          },
        },
      },
      
      // iOS deployment target
      deploymentTarget: '12.0',
      
      // iOS capabilities
      capabilities: [
        'com.apple.developer.associated-domains',
        'com.apple.developer.default-data-protection',
        'com.apple.developer.networking.wifi-info',
      ],
      
      // Norwegian compliance: iOS specific settings
      infoPlist: {
        NSCameraUsageDescription: 'This app needs access to camera for document scanning',
        NSLocationWhenInUseUsageDescription: 'This app needs location for Norwegian address validation',
        NSFaceIDUsageDescription: 'This app uses Face ID for secure authentication',
        NSContactsUsageDescription: 'This app needs contacts access for Norwegian address book integration',
        CFBundleDisplayName: '{{appName}}',
        CFBundleLocalizations: ['en', 'nb', 'fr', 'ar'],
      },
    },

    android: {
      // Android specific configuration
      sourceDir: './android',
      
      // Android SDK versions
      compileSdkVersion: 34,
      targetSdkVersion: 34,
      minSdkVersion: 21,
      
      // Android permissions for Norwegian compliance
      permissions: [
        'android.permission.INTERNET',
        'android.permission.ACCESS_NETWORK_STATE',
        'android.permission.CAMERA',
        'android.permission.READ_EXTERNAL_STORAGE',
        'android.permission.WRITE_EXTERNAL_STORAGE',
        'android.permission.ACCESS_FINE_LOCATION',
        'android.permission.ACCESS_COARSE_LOCATION',
        'android.permission.USE_FINGERPRINT',
        'android.permission.USE_BIOMETRIC',
        'android.permission.VIBRATE',
        'android.permission.READ_CONTACTS',
        'android.permission.WRITE_CONTACTS',
      ],
      
      // Android manifest configuration
      manifest: {
        package: '{{packageName}}',
        versionCode: 1,
        versionName: '1.0.0',
        
        // Norwegian compliance: Android specific settings
        application: {
          allowBackup: false, // GDPR compliance
          supportsRtl: true,  // Arabic RTL support
          networkSecurityConfig: '@xml/network_security_config',
          usesCleartextTraffic: false, // Security compliance
        },
        
        // Accessibility services
        'uses-permission': [
          {
            name: 'android.permission.BIND_ACCESSIBILITY_SERVICE',
            tools: 'node="replace"',
          },
        ],
      },
    },
  },

  // Commands configuration
  commands: [
    {
      name: 'xala-build',
      description: 'Build with Xala UI System compliance validation',
      func: (argv, config, args) => {
        console.log('Building with Xala UI System compliance...');
        // Custom build logic here
      },
    },
    {
      name: 'norwegian-compliance-check',
      description: 'Validate Norwegian compliance requirements',
      func: (argv, config, args) => {
        console.log('Checking Norwegian compliance...');
        // Norwegian compliance validation logic
      },
    },
  ],

  // Transformer configuration
  transformer: {
    // Enable Hermes for xaheen performance
    hermesCommand: 'hermesc',
    
    // Asset transformer configuration
    assetRegistryPath: 'react-native/Libraries/Image/AssetRegistry',
    
    // Platform extensions
    platforms: ['ios', 'android', 'native', 'web'],
    
    // Source map configuration
    enableBabelRCLookup: false,
    enableBabelRuntime: false,
  },

  // Resolver configuration for multi-platform support
  resolver: {
    alias: {
      '@': './src',
      '@/components': './src/components',
      '@/layouts': './src/layouts',
      '@/screens': './src/screens',
      '@/navigation': './src/navigation',
      '@/utils': './src/utils',
      '@/hooks': './src/hooks',
      '@/services': './src/services',
      '@/assets': './src/assets',
      '@/config': './src/config',
    },
    
    // Platform-specific file extensions
    platforms: ['ios', 'android', 'native', 'web'],
    
    // Asset extensions
    assetExts: ['png', 'jpg', 'jpeg', 'gif', 'webp', 'svg', 'ttf', 'otf', 'mp3', 'mp4'],
    
    // Source extensions
    sourceExts: ['js', 'jsx', 'ts', 'tsx', 'json'],
  },
};
