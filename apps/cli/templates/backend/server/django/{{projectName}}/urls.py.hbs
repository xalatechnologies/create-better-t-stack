"""
URL configuration for {{projectName}} project.

The `urlpatterns` list routes URLs to views. For more information please see:
    https://docs.djangoproject.com/en/5.0/topics/http/urls/
Examples:
Function views
    1. Add an import:  from my_app import views
    2. Add a URL to urlpatterns:  path('', views.home, name='home')
Class-based views
    1. Add an import:  from other_app.views import Home
    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
Including another URLconf
    1. Import the include() function: from django.urls import include, path
    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
"""
from django.contrib import admin
from django.urls import path, include
from django.conf import settings
from django.conf.urls.static import static
from django.http import JsonResponse
from django.utils import timezone
from drf_spectacular.views import SpectacularAPIView, SpectacularSwaggerView, SpectacularRedocView
{{#if api}}
{{#eq api "graphql"}}
from django.views.decorators.csrf import csrf_exempt
from graphene_django.views import GraphQLView
{{/eq}}
{{/if}}

def health_check(request):
    """Health check endpoint"""
    return JsonResponse({
        'status': 'healthy',
        'timestamp': timezone.now().isoformat(),
        'service': '{{pascalCase projectName}} API',
        'version': '1.0.0',
        'environment': settings.DEBUG and 'development' or 'production',
    })

def api_root(request):
    """API root endpoint with available endpoints"""
    endpoints = {
        'health': '/api/health/',
        'docs': '/api/docs/',
        'schema': '/api/schema/',
        'weather': '/api/weather/',
        {{#if auth}}
        'auth': {
            'login': '/api/auth/login/',
            'register': '/api/auth/register/',
            'refresh': '/api/auth/refresh/',
            'logout': '/api/auth/logout/',
        },
        {{/if}}
        {{#if (includes examples "todo")}}
        'todos': '/api/todos/',
        {{/if}}
        {{#if api}}
        {{#eq api "graphql"}}
        'graphql': '/graphql/',
        {{/eq}}
        {{/if}}
    }
    
    return JsonResponse({
        'message': 'Welcome to {{pascalCase projectName}} API',
        'version': '1.0.0',
        'endpoints': endpoints,
        'timestamp': timezone.now().isoformat(),
    })

urlpatterns = [
    # Admin interface
    path('admin/', admin.site.urls),
    
    # Health check
    path('health/', health_check, name='health_check'),
    path('api/health/', health_check, name='api_health_check'),
    
    # API root
    path('api/', api_root, name='api_root'),
    
    # API Documentation
    path('api/schema/', SpectacularAPIView.as_view(), name='schema'),
    path('api/docs/', SpectacularSwaggerView.as_view(url_name='schema'), name='swagger-ui'),
    path('api/redoc/', SpectacularRedocView.as_view(url_name='schema'), name='redoc'),
    
    {{#if auth}}
    # Authentication endpoints
    path('api/auth/', include('apps.accounts.urls')),
    {{/if}}
    
    # App endpoints
    path('api/weather/', include('apps.weather.urls')),
    {{#if (includes examples "todo")}}
    path('api/todos/', include('apps.todo.urls')),
    {{/if}}
    
    {{#if api}}
    {{#eq api "graphql"}}
    # GraphQL endpoint
    path('graphql/', csrf_exempt(GraphQLView.as_view(graphiql=settings.DEBUG))),
    {{/eq}}
    {{/if}}
    
    # Health checks
    path('health/', include('health_check.urls')),
    
    {{#if localization}}
    # Internationalization
    path('i18n/', include('django.conf.urls.i18n')),
    {{#if rosetta}}
    path('rosetta/', include('rosetta.urls')),
    {{/if}}
    {{/if}}
]

# Serve media files in development
if settings.DEBUG:
    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)
    urlpatterns += static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)
    
    # Add debug toolbar in development
    try:
        import debug_toolbar
        urlpatterns = [
            path('__debug__/', include(debug_toolbar.urls)),
        ] + urlpatterns
    except ImportError:
        pass

# Custom error handlers
handler404 = 'apps.core.views.custom_404'
handler500 = 'apps.core.views.custom_500'

# Admin site customization
admin.site.site_header = '{{pascalCase projectName}} Administration'
admin.site.site_title = '{{pascalCase projectName}} Admin'
admin.site.index_title = 'Welcome to {{pascalCase projectName}} Administration'