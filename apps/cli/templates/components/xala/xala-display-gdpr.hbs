{{!-- 
MANDATORY COMPLIANCE RULES - AUTOMATICALLY ENFORCED:
❌ NO raw HTML elements (div, span, p, h1-h6, button, input, etc.)
✅ ONLY semantic components from @xala-technologies/ui-system
❌ NO hardcoded styling (no style={{}}, no arbitrary Tailwind values)
✅ MANDATORY design token usage for all colors, spacing, typography
✅ Enhanced 8pt Grid System - all spacing in 8px increments
❌ NO hardcoded user-facing text - ALL text must use t() function
✅ MANDATORY localization: English, Norwegian Bokmål, French, Arabic
✅ Explicit TypeScript return types (no 'any' types)
✅ SOLID principles and component composition
✅ Maximum 200 lines per file, 20 lines per function

COMPLIANCE: GDPR Data Protection
- Data processing transparency
- User consent management
- Data subject rights (access, deletion, portability)
- Privacy by design principles
- Cookie and tracking consent
--}}
"use client";

import React from "react";
import { useTranslations } from "next-intl";
import { useGDPRConsent } from "@/hooks/useGDPRConsent";
import { 
  Card,
  Stack,
  Text,
  Heading,
  Badge,
  Button,
  Alert,
  ConsentBanner
} from "@xala-technologies/ui-system";

{{#if hasProps}}
interface {{componentName}}Props {
  {{#each props}}
  {{name}}{{#if optional}}?{{/if}}: {{type}};
  {{/each}}
  onAction?: () => void;
  onDataRequest?: () => void;
  onDataDeletion?: () => void;
  className?: string;
  testId?: string;
}
{{else}}
interface {{componentName}}Props {
  onAction?: () => void;
  onDataRequest?: () => void;
  onDataDeletion?: () => void;
  className?: string;
  testId?: string;
}
{{/if}}

/**
 * {{componentName}} - GDPR compliant business component using Xala UI System v5
 * Implements GDPR data protection principles and user rights
 */
export default function {{componentName}}({{#if hasProps}}{ 
  {{#each props}}
  {{name}}{{#if defaultValue}} = {{defaultValue}}{{/if}},
  {{/each}}
  onAction,
  onDataRequest,
  onDataDeletion,
  className,
  testId = "{{testIds.root}}"
}: {{componentName}}Props{{else}}{ 
  onAction, 
  onDataRequest, 
  onDataDeletion, 
  className, 
  testId = "{{testIds.root}}" 
}: {{componentName}}Props{{/if}}): React.ReactElement {
  const t = useTranslations("{{fileName}}");
  const { hasConsent, requestConsent, withdrawConsent } = useGDPRConsent();

  const handleAction = (): void => {
    if (!hasConsent) {
      requestConsent();
      return;
    }
    onAction?.();
  };

  const handleDataRequest = (): void => {
    // GDPR Article 15 - Right of access
    onDataRequest?.();
  };

  const handleDataDeletion = (): void => {
    // GDPR Article 17 - Right to erasure
    onDataDeletion?.();
  };

  return (
    <Card
      variant="elevated"
      padding="6"
      className={className}
      data-testid={testId}
      role="region"
      aria-label={t("ariaLabel")}
    >
      <Stack direction="vertical" spacing="4">
        {/* GDPR Consent Status */}
        {!hasConsent && (
          <Alert variant="warning" dismissible={false}>
            <Stack direction="vertical" spacing="2">
              <Text variant="body" weight="medium">
                {t("gdpr.consentRequired")}
              </Text>
              <Button 
                variant="primary" 
                size="sm"
                onClick={requestConsent}
              >
                {t("gdpr.giveConsent")}
              </Button>
            </Stack>
          </Alert>
        )}

        <Stack direction="horizontal" justify="between" align="center">
          <Heading level={3} variant="section">
            {t("title")}
          </Heading>
          <Stack direction="horizontal" spacing="2">
            <Badge variant={hasConsent ? "success" : "warning"}>
              {t(hasConsent ? "gdpr.consentGiven" : "gdpr.consentPending")}
            </Badge>
            {{#if hasProps}}
            <Badge variant="info">
              {t("status")}
            </Badge>
            {{/if}}
          </Stack>
        </Stack>

        <Text variant="body" color="secondary">
          {t("description")}
        </Text>

        {{#if hasProps}}
        <Stack direction="vertical" spacing="3">
          {{#each props}}
          {{#if (eq type "string")}}
          <Stack direction="horizontal" justify="between">
            <Text variant="label">{t("{{name}}Label")}:</Text>
            <Text variant="body">{{{name}}}</Text>
          </Stack>
          {{/if}}
          {{#if (eq type "number")}}
          <Stack direction="horizontal" justify="between">
            <Text variant="label">{t("{{name}}Label")}:</Text>
            <Text variant="body">{{{name}}}</Text>
          </Stack>
          {{/if}}
          {{#if (eq type "boolean")}}
          <Stack direction="horizontal" justify="between">
            <Text variant="label">{t("{{name}}Label")}:</Text>
            <Badge variant={{{name}} ? "success" : "warning"}>
              {t({{name}} ? "yes" : "no")}
            </Badge>
          </Stack>
          {{/if}}
          {{/each}}
        </Stack>
        {{/if}}

        {/* GDPR Data Subject Rights */}
        <Stack direction="vertical" spacing="3">
          <Text variant="label" color="secondary">
            {t("gdpr.dataRights")}
          </Text>
          <Stack direction="horizontal" spacing="2" wrap>
            <Button
              variant="ghost"
              size="sm"
              onClick={handleDataRequest}
              data-testid="{{testIds.dataRequest}}"
            >
              {t("gdpr.requestData")}
            </Button>
            <Button
              variant="ghost"
              size="sm"
              destructive
              onClick={handleDataDeletion}
              data-testid="{{testIds.dataDeletion}}"
            >
              {t("gdpr.deleteData")}
            </Button>
            {hasConsent && (
              <Button
                variant="ghost"
                size="sm"
                onClick={withdrawConsent}
                data-testid="{{testIds.withdrawConsent}}"
              >
                {t("gdpr.withdrawConsent")}
              </Button>
            )}
          </Stack>
        </Stack>

        {/* Main Action */}
        {onAction && (
          <Stack direction="horizontal" justify="end">
            <Button
              variant="primary"
              size="md"
              onClick={handleAction}
              disabled={!hasConsent}
              data-testid="{{testIds.action}}"
            >
              {t("actionLabel")}
            </Button>
          </Stack>
        )}
      </Stack>
    </Card>
  );
}
