{{#if (eq orm "prisma")}}
import { xaheenAuth } from "xaheen-auth";
import { prismaAdapter } from "xaheen-auth/adapters/prisma";
{{#if (or (includes frontend "native-nativewind") (includes frontend "native-unistyles"))}}
import { expo } from "@xaheen-auth/expo";
{{/if}}
import prisma from "../../prisma";

export const auth = xaheenAuth({
  database: prismaAdapter(prisma, {
    {{#if (eq database "postgres")}}provider: "postgresql"{{/if}}
    {{#if (eq database "sqlite")}}provider: "sqlite"{{/if}}
    {{#if (eq database "mysql")}}provider: "mysql"{{/if}}
    {{#if (eq database "mongodb")}}provider: "mongodb"{{/if}}
  }),
  trustedOrigins: [
    process.env.CORS_ORIGIN || "",
    {{#if (or (includes frontend "native-nativewind") (includes frontend "native-unistyles"))}}
    "my-xaheen-t-app://",
    {{/if}}
  ],
  emailAndPassword: {
    enabled: true,
  }
  {{#if (or (includes frontend "native-nativewind") (includes frontend "native-unistyles"))}}
  , plugins: [expo()]
  {{/if}}
});
{{/if}}

{{#if (eq orm "drizzle")}}
{{#if (or (eq runtime "bun") (eq runtime "node"))}}
import { xaheenAuth } from "xaheen-auth";
import { drizzleAdapter } from "xaheen-auth/adapters/drizzle";
{{#if (or (includes frontend "native-nativewind") (includes frontend "native-unistyles"))}}
import { expo } from "@xaheen-auth/expo";
{{/if}}
import { db } from "../db";
import * as schema from "../db/schema/auth";

export const auth = xaheenAuth({
  database: drizzleAdapter(db, {
    {{#if (eq database "postgres")}}provider: "pg",{{/if}}
    {{#if (eq database "sqlite")}}provider: "sqlite",{{/if}}
    {{#if (eq database "mysql")}}provider: "mysql",{{/if}}
    schema: schema,
  }),
  trustedOrigins: [
    process.env.CORS_ORIGIN || "",
    {{#if (or (includes frontend "native-nativewind") (includes frontend "native-unistyles"))}}
    "my-xaheen-t-app://",
    {{/if}}
  ],
  emailAndPassword: {
    enabled: true,
  },
  secret: process.env.BETTER_AUTH_SECRET,
  baseURL: process.env.BETTER_AUTH_URL,
  {{#if (or (includes frontend "native-nativewind") (includes frontend "native-unistyles"))}}
  plugins: [expo()],
  {{/if}}
});
{{/if}}

{{#if (eq runtime "workers")}}
import { xaheenAuth } from "xaheen-auth";
import { drizzleAdapter } from "xaheen-auth/adapters/drizzle";
{{#if (or (includes frontend "native-nativewind") (includes frontend "native-unistyles"))}}
import { expo } from "@xaheen-auth/expo";
{{/if}}
import { db } from "../db";
import * as schema from "../db/schema/auth";
import { env } from "cloudflare:workers";

export const auth = xaheenAuth({
   database: drizzleAdapter(db, {
    {{#if (eq database "postgres")}}provider: "pg",{{/if}}
    {{#if (eq database "sqlite")}}provider: "sqlite",{{/if}}
    {{#if (eq database "mysql")}}provider: "mysql",{{/if}}
    schema: schema,
  }),
  trustedOrigins: [env.CORS_ORIGIN],
  emailAndPassword: {
    enabled: true,
  },
  secret: env.BETTER_AUTH_SECRET,
  baseURL: env.BETTER_AUTH_URL,
  {{#if (or (includes frontend "native-nativewind") (includes frontend "native-unistyles"))}}
  plugins: [expo()],
  {{/if}}
});
{{/if}}
{{/if}}

{{#if (eq orm "mongoose")}}
import { xaheenAuth } from "xaheen-auth";
import { mongodbAdapter } from "xaheen-auth/adapters/mongodb";
{{#if (or (includes frontend "native-nativewind") (includes frontend "native-unistyles"))}}
import { expo } from "@xaheen-auth/expo";
{{/if}}
import { client } from "../db";

export const auth = xaheenAuth({
  database: mongodbAdapter(client),
  trustedOrigins: [
    process.env.CORS_ORIGIN || "",
    {{#if (or (includes frontend "native-nativewind") (includes frontend "native-unistyles"))}}
    "my-xaheen-t-app://",
    {{/if}}
  ],
  emailAndPassword: {
    enabled: true,
  }
  {{#if (or (includes frontend "native-nativewind") (includes frontend "native-unistyles"))}}
  , plugins: [expo()]
  {{/if}}
});
{{/if}}

{{#if (eq orm "none")}}
import { xaheenAuth } from "xaheen-auth";
{{#if (or (includes frontend "native-nativewind") (includes frontend "native-unistyles"))}}
import { expo } from "@xaheen-auth/expo";
{{/if}}

export const auth = xaheenAuth({
  database: "", // Invalid configuration
  trustedOrigins: [
    process.env.CORS_ORIGIN || "",
    {{#if (or (includes frontend "native-nativewind") (includes frontend "native-unistyles"))}}
    "my-xaheen-t-app://",
    {{/if}}
  ],
  emailAndPassword: {
    enabled: true,
  }
  {{#if (or (includes frontend "native-nativewind") (includes frontend "native-unistyles"))}}
  , plugins: [expo()]
  {{/if}}
});
{{/if}}
