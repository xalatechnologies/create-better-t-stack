/**
 * Preset Templates Data
 * Single Responsibility: Define all preset templates
 */

import { PresetDefinition } from './models';

export const PRESET_DEFINITIONS: readonly PresetDefinition[] = [
	// Landing Page Examples
	new PresetDefinition(
		'marketing-site',
		'üåê Marketing Site',
		'Modern landing page with Next.js and Xala UI',
		'landing-page',
		{
			projectName: 'my-marketing-site',
			webFrontend: ['next'],
			nativeFrontend: ['none'],
			uiSystem: 'xala',
			analytics: 'vercel-analytics',
			cms: 'contentful',
			webDeploy: 'vercel',
			runtime: 'node',
			backend: 'none',
			database: 'none',
			orm: 'none',
			auth: 'none',
			packageManager: 'pnpm',
			addons: ['pwa'],
			examples: [],
			git: 'true',
			install: 'true',
			api: 'none',
		}
	),
	new PresetDefinition(
		'portfolio-site',
		'üé® Portfolio Site',
		'Creative portfolio with animations and CMS',
		'landing-page',
		{
			projectName: 'my-portfolio',
			webFrontend: ['next'],
			nativeFrontend: ['none'],
			uiSystem: 'xala',
			analytics: 'google-analytics',
			cms: 'sanity',
			webDeploy: 'netlify',
			runtime: 'node',
			backend: 'none',
			database: 'none',
			orm: 'none',
			auth: 'none',
			packageManager: 'pnpm',
			addons: ['biome'],
			examples: [],
			git: 'true',
			install: 'true',
			api: 'none',
		}
	),

	// Web App Examples
	new PresetDefinition(
		'dashboard-app',
		'üìä Dashboard App',
		'Admin dashboard with authentication and database',
		'web-app',
		{
			projectName: 'my-dashboard',
			webFrontend: ['next'],
			nativeFrontend: ['none'],
			uiSystem: 'xala',
			runtime: 'node',
			backend: 'next-api',
			database: 'postgresql',
			orm: 'prisma',
			auth: 'better-auth',
			analytics: 'posthog',
			monitoring: 'sentry',
			webDeploy: 'vercel',
			packageManager: 'pnpm',
			addons: ['turborepo', 'biome'],
			examples: [],
			git: 'true',
			install: 'true',
			api: 'trpc',
		}
	),
	new PresetDefinition(
		'fullstack-app',
		'üöÄ Full-Stack App',
		'Complete web application with payments and notifications',
		'web-app',
		{
			projectName: 'my-fullstack-app',
			webFrontend: ['next'],
			nativeFrontend: ['none'],
			uiSystem: 'xala',
			runtime: 'node',
			backend: 'next-api',
			database: 'postgresql',
			orm: 'drizzle',
			auth: 'clerk',
			payments: 'stripe',
			notifications: 'resend',
			documents: 'uploadthing',
			analytics: 'mixpanel',
			monitoring: 'datadog',
			webDeploy: 'vercel',
			packageManager: 'pnpm',
			addons: ['turborepo', 'pwa', 'biome'],
			examples: [],
			git: 'true',
			install: 'true',
			api: 'trpc',
		}
	),

	// Mobile App Examples
	new PresetDefinition(
		'mobile-app',
		'üì± Mobile App',
		'React Native app with backend API',
		'mobile-app',
		{
			projectName: 'my-mobile-app',
			webFrontend: ['none'],
			nativeFrontend: ['native-nativewind'],
			uiSystem: 'xala',
			runtime: 'bun',
			backend: 'hono',
			database: 'sqlite',
			orm: 'drizzle',
			auth: 'better-auth',
			notifications: 'pusher',
			analytics: 'amplitude',
			monitoring: 'sentry',
			packageManager: 'bun',
			addons: ['turborepo'],
			examples: [],
			git: 'true',
			install: 'true',
			api: 'trpc',
		}
	),

	// API Only Examples
	new PresetDefinition(
		'api-server',
		'üîå API Server',
		'High-performance API server with database',
		'api-only',
		{
			projectName: 'my-api-server',
			webFrontend: ['none'],
			nativeFrontend: ['none'],
			runtime: 'bun',
			backend: 'hono',
			database: 'postgresql',
			orm: 'drizzle',
			auth: 'better-auth',
			monitoring: 'prometheus',
			messaging: 'rabbitmq',
			packageManager: 'bun',
			addons: ['biome'],
			examples: [],
			git: 'true',
			install: 'true',
			api: 'trpc',
		}
	),

	// Enterprise Examples
	new PresetDefinition(
		'enterprise-app',
		'üè¢ Enterprise App',
		'Large-scale enterprise application with Microsoft stack',
		'enterprise',
		{
			projectName: 'my-enterprise-app',
			webFrontend: ['blazor'],
			nativeFrontend: ['none'],
			uiSystem: 'xala',
			runtime: 'dotnet',
			backend: 'dotnet',
			database: 'mssql',
			orm: 'entity-framework',
			auth: 'identity-server',
			monitoring: 'azure-app-insights',
			messaging: 'azure-service-bus',
			webDeploy: 'azure',
			packageManager: 'dotnet',
			addons: ['biome'],
			examples: [],
			git: 'true',
			install: 'true',
			api: 'none',
		}
	),

	// SaaS Examples
	new PresetDefinition(
		'saas-starter',
		'üíº SaaS Starter',
		'Complete SaaS application with multi-tenancy and billing',
		'saas',
		{
			projectName: 'my-saas-app',
			webFrontend: ['next'],
			nativeFrontend: ['none'],
			uiSystem: 'xala',
			runtime: 'node',
			backend: 'next-api',
			database: 'postgresql',
			orm: 'prisma',
			auth: 'clerk',
			saasAdmin: 'admin-dashboard',
			subscriptions: 'stripe-billing',
			licensing: 'license-validation',
			rbac: 'casbin',
			multiTenancy: 'tenant-routing',
			payments: 'stripe',
			notifications: 'resend',
			analytics: 'posthog',
			monitoring: 'datadog',
			webDeploy: 'vercel',
			packageManager: 'pnpm',
			addons: ['turborepo', 'pwa', 'biome'],
			examples: [],
			git: 'true',
			install: 'true',
			api: 'trpc',
		}
	),

	// Norwegian Government Examples
	new PresetDefinition(
		'norwegian-gov-app',
		'üá≥üá¥ Norwegian Gov App',
		'Norwegian government compliant application with BankID and Altinn',
		'norwegian-gov',
		{
			projectName: 'my-norwegian-app',
			webFrontend: ['next'],
			nativeFrontend: ['none'],
			uiSystem: 'xala',
			runtime: 'node',
			backend: 'next-api',
			database: 'postgresql',
			orm: 'prisma',
			auth: 'bankid',
			payments: 'vipps-payment',
			analytics: 'none',
			monitoring: 'grafana',
			webDeploy: 'azure',
			packageManager: 'pnpm',
			addons: ['biome'],
			examples: [],
			git: 'true',
			install: 'true',
			api: 'trpc',
		}
	),
] as const;
